name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build:
    name: Build and Upload Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Use Node.js
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: '16.x'
      - name: Set Chapter Environment Variables
        run: | 
          cp .env.example .env
      # reinstate once Auth0 is in.
      # cp client/.env.local.example client/.env.local
      - name: Build Images
        env: 
          NEXT_PUBLIC_APOLLO_SERVER: ${{ secrets.CHAPTER_SERVER_URL }}
        run: npm run build:docker
      - name: Save Images
        run: |
          docker save -o app.tar chapter_app
          docker save -o client.tar chapter_client
      # TODO: upload to repository once this has been shown to work.
      - name: Upload Images
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DIGITAL_OCEAN_HOST_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          passphrase: ${{ secrets.DIGITAL_OCEAN_SSH_PASSPHRASE }}
          port: 22
          source: 'app.tar,client.tar'
          target: images
      - name: Unpack Images
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DIGITAL_OCEAN_HOST_IP }}
          username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          passphrase: ${{ secrets.DIGITAL_OCEAN_SSH_PASSPHRASE }}
          port: 22
          script: |
            docker load -i images/app.tar
            docker load -i images/client.tar
            cd chapter && docker compose -f docker-compose.yml up -d
